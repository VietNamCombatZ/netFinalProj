@using finalProject.Models.ViewModels  <!-- Thay b·∫±ng namespace ch·ª©a AuthorStats & TopicStats -->
@using System.Text.Json
@{
    ViewData["Title"] = "Th·ªëng k√™ b√†i vi·∫øt";

    var authorStats = ViewBag.ByAuthor as List<AuthorStats>;
    var topicStats = ViewBag.ByTopic as List<TopicStats>;

    var topicLabels = JsonSerializer.Serialize(topicStats.Select(t => t.Topic));
    var topicData = JsonSerializer.Serialize(topicStats.Select(t => t.Count));

    var approved = ViewBag.ApprovedCount;
    var pending = ViewBag.PendingCount;
}

<h2>üìä Th·ªëng k√™ b√†i vi·∫øt</h2>
<hr />

<!-- 1. Theo t√°c gi·∫£ -->
<div class="mt-4">
    <h4>1. S·ªë l∆∞·ª£ng b√†i vi·∫øt theo t√°c gi·∫£</h4>
    <table class="table table-bordered">
        <thead>
        <tr>
            <th>T√°c gi·∫£</th>
            <th>S·ªë l∆∞·ª£ng b√†i vi·∫øt</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var author in authorStats)
        {
            <tr>
                <td>@author.Username</td>
                <td>@author.Count</td>
            </tr>
        }
        </tbody>
    </table>
</div>

<!-- 2. Theo ch·ªß ƒë·ªÅ -->
<div class="mt-4">
    <h4>2. S·ªë l∆∞·ª£ng b√†i vi·∫øt theo ch·ªß ƒë·ªÅ</h4>
    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Ch·ªß ƒë·ªÅ</th>
            <th>S·ªë l∆∞·ª£ng b√†i vi·∫øt</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var topic in topicStats)
        {
            <tr>
                <td>@topic.Topic</td>
                <td>@topic.Count</td>
            </tr>
        }
        </tbody>
    </table>
</div>

<!-- 3. ƒê√£ duy·ªát / Ch∆∞a duy·ªát -->
<div class="mt-4">
    <h4>3. Tr·∫°ng th√°i b√†i vi·∫øt</h4>
    <ul class="list-group w-50">
        <li class="list-group-item d-flex justify-content-between align-items-center">
            ‚úÖ B√†i ƒë√£ duy·ªát
            <span class="badge bg-success rounded-pill">@approved</span>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-center">
            ‚è≥ B√†i ch∆∞a duy·ªát
            <span class="badge bg-warning text-dark rounded-pill">@pending</span>
        </li>
    </ul>
</div>

<!-- 4. Bi·ªÉu ƒë·ªì theo ch·ªß ƒë·ªÅ -->
<div class="mt-5">
    <h4>4. Bi·ªÉu ƒë·ªì b√†i vi·∫øt theo ch·ªß ƒë·ªÅ</h4>
    <div style="width: 400px; height: 400px;">
        <canvas id="topicChart" width="200px" height="200px"></canvas>
    </div>
    
</div>

<!-- 5. Bi·ªÉu ƒë·ªì duy·ªát / ch∆∞a duy·ªát -->
<div class="mt-5">
    <h4>5. Bi·ªÉu ƒë·ªì b√†i vi·∫øt ƒë√£ duy·ªát / ch∆∞a duy·ªát</h4>
    <div style="width: 400px; height: 400px;">
        <canvas id="statusChart" width="200px" height="200px"></canvas>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const topicLabels = @Html.Raw(topicLabels);
    const topicData = @Html.Raw(topicData);

    const approved = @approved;
    const pending = @pending;

    // Bi·ªÉu ƒë·ªì ch·ªß ƒë·ªÅ
    const topicChart = new Chart(document.getElementById("topicChart"), {
        type: 'pie',
        data: {
            labels: topicLabels,
            datasets: [{
                label: 'B√†i vi·∫øt theo ch·ªß ƒë·ªÅ',
                data: topicData,
                backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],
                borderWidth: 1
            }]
        }
    });

    // Bi·ªÉu ƒë·ªì tr·∫°ng th√°i
    const statusChart = new Chart(document.getElementById("statusChart"), {
        type: 'pie',
        data: {
            labels: ['ƒê√£ duy·ªát', 'Ch∆∞a duy·ªát'],
            datasets: [{
                label: 'Tr·∫°ng th√°i b√†i vi·∫øt',
                data: [approved, pending],
                backgroundColor: ['#28a745', '#ffc107'],
                borderWidth: 1
            }]
        }
    });
</script>
